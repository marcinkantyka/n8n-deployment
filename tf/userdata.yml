#cloud-config

# Update system packages
package_update: true
package_upgrade: true

# Install required packages
packages:
  - curl
  - wget
  - git
  - nginx
  - certbot
  - python3-certbot-nginx
  - ufw
  - fail2ban
  - ssl-cert

# Create n8n user
users:
  - name: n8n
    system: true
    shell: /bin/bash
    homedir: /home/n8n

# Write configuration files
write_files:
  # n8n environment configuration
  - path: /home/n8n/.env
    permissions: '0600'
    owner: n8n:n8n
    content: |
      # n8n Configuration
      N8N_BASIC_AUTH_ACTIVE=true
      N8N_BASIC_AUTH_USER=admin
      N8N_BASIC_AUTH_PASSWORD=changeme123
      N8N_HOST=0.0.0.0
      N8N_PORT=5678
      N8N_PROTOCOL=http
      WEBHOOK_URL=https://${domain_name}/
      GENERIC_TIMEZONE=Europe/Warsaw
      N8N_USER_FOLDER=/home/n8n

  # n8n systemd service
  - path: /etc/systemd/system/n8n.service
    permissions: '0644'
    content: |
      [Unit]
      Description=n8n workflow automation
      After=network.target

      [Service]
      Type=simple
      User=n8n
      Group=n8n
      WorkingDirectory=/home/n8n
      EnvironmentFile=/home/n8n/.env
      ExecStart=/usr/local/bin/n8n start
      Restart=always
      RestartSec=10
      StandardOutput=journal
      StandardError=journal
      SyslogIdentifier=n8n

      [Install]
      WantedBy=multi-user.target

  # Nginx configuration
  - path: /etc/nginx/sites-available/n8n
    permissions: '0644'
    content: |
      server {
          listen 80;
          server_name ${domain_name};
          
          # For testing, allow HTTP access
          location / {
              proxy_pass http://127.0.0.1:5678;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_cache_bypass $http_upgrade;
              
              # WebSocket support
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              
              # Increase timeouts for long-running workflows
              proxy_connect_timeout 60s;
              proxy_send_timeout 60s;
              proxy_read_timeout 60s;
          }
      }

  # Installation script
  - path: /tmp/install-n8n.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e
      
      echo "Installing Node.js..."
      curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
      apt-get install -y nodejs
      
      echo "Waiting for npm to be available..."
      sleep 10
      
      echo "Installing n8n globally..."
      npm install -g n8n
      
      echo "Setting up n8n user directory..."
      mkdir -p /home/n8n/.n8n
      chown -R n8n:n8n /home/n8n
      
      echo "Starting n8n service..."
      systemctl daemon-reload
      systemctl enable n8n
      systemctl start n8n
      
      # Wait for n8n to start
      sleep 15
      
      echo "Checking if n8n is running..."
      if systemctl is-active --quiet n8n; then
          echo "n8n service is running"
      else
          echo "n8n service failed to start, checking logs..."
          journalctl -u n8n --no-pager -l
      fi

  # UFW rules script
  - path: /tmp/setup-firewall.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      ufw default deny incoming
      ufw default allow outgoing
      ufw allow ssh
      ufw allow 'Nginx Full'
      ufw allow 80/tcp
      ufw allow 443/tcp
      ufw --force enable

runcmd:
  # Run the n8n installation script
  - /tmp/install-n8n.sh

  # Configure Nginx
  - ln -sf /etc/nginx/sites-available/n8n /etc/nginx/sites-enabled/
  - rm -f /etc/nginx/sites-enabled/default
  
  # Test nginx configuration and restart
  - nginx -t
  - systemctl restart nginx

  # Set up firewall
  - /tmp/setup-firewall.sh

  # Configure fail2ban for additional security
  - systemctl enable fail2ban
  - systemctl start fail2ban

  # Clean up
  - apt-get autoremove -y
  - apt-get autoclean

# Final message
final_message: |
  n8n installation completed!
  
  You can access n8n at: http://your-domain.com
  Default credentials: admin / changeme123
  
  To check status:
  - sudo systemctl status n8n
  - sudo journalctl -u n8n -f
  
  To setup SSL later:
  - sudo certbot --nginx -d your-domain.com